CREATE TABLE IF NOT EXISTS "migrations" ("id" integer primary key autoincrement not null, "migration" varchar not null, "batch" integer not null);
CREATE TABLE IF NOT EXISTS "users" ("id" integer primary key autoincrement not null, "name" varchar not null, "email" varchar not null, "email_verified_at" datetime, "password" varchar not null, "remember_token" varchar, "created_at" datetime, "updated_at" datetime, "role" varchar not null default 'editor', "is_active" tinyint(1) not null default '1', "last_login_at" datetime, "profile_image" varchar);
CREATE UNIQUE INDEX "users_email_unique" on "users" ("email");
CREATE TABLE IF NOT EXISTS "password_reset_tokens" ("email" varchar not null, "token" varchar not null, "created_at" datetime, primary key ("email"));
CREATE TABLE IF NOT EXISTS "failed_jobs" ("id" integer primary key autoincrement not null, "uuid" varchar not null, "connection" text not null, "queue" text not null, "payload" text not null, "exception" text not null, "failed_at" datetime not null default CURRENT_TIMESTAMP);
CREATE UNIQUE INDEX "failed_jobs_uuid_unique" on "failed_jobs" ("uuid");
CREATE TABLE IF NOT EXISTS "personal_access_tokens" ("id" integer primary key autoincrement not null, "tokenable_type" varchar not null, "tokenable_id" integer not null, "name" varchar not null, "token" varchar not null, "abilities" text, "last_used_at" datetime, "expires_at" datetime, "created_at" datetime, "updated_at" datetime);
CREATE INDEX "personal_access_tokens_tokenable_type_tokenable_id_index" on "personal_access_tokens" ("tokenable_type", "tokenable_id");
CREATE UNIQUE INDEX "personal_access_tokens_token_unique" on "personal_access_tokens" ("token");
CREATE TABLE IF NOT EXISTS "news" ("id" integer primary key autoincrement not null, "title" varchar not null, "slug" varchar not null, "excerpt" text, "content" text not null, "featured_image" varchar, "category" varchar not null default 'general', "is_published" tinyint(1) not null default '0', "is_featured" tinyint(1) not null default '0', "published_at" datetime, "author_id" integer not null, "views" integer not null default '0', "created_at" datetime, "updated_at" datetime, "category_id" integer, foreign key("author_id") references "users"("id") on delete cascade);
CREATE INDEX "news_is_published_published_at_index" on "news" ("is_published", "published_at");
CREATE INDEX "news_category_is_published_index" on "news" ("category", "is_published");
CREATE UNIQUE INDEX "news_slug_unique" on "news" ("slug");
CREATE TABLE IF NOT EXISTS "players" ("id" integer primary key autoincrement not null, "name" varchar not null, "slug" varchar not null, "jersey_number" integer, "position" varchar not null, "team_category" varchar not null, "date_of_birth" date, "nationality" varchar, "height" numeric, "weight" numeric, "preferred_foot" varchar, "profile_image" varchar, "biography" text, "joined_date" date, "previous_club" varchar, "goals" integer not null default '0', "assists" integer not null default '0', "appearances" integer not null default '0', "is_active" tinyint(1) not null default '1', "is_captain" tinyint(1) not null default '0', "created_at" datetime, "updated_at" datetime, "goals_inside_box" integer not null default '0', "goals_outside_box" integer not null default '0', "passes_completed" integer not null default '0', "passes_lost" integer not null default '0', "tackles_won" integer not null default '0', "tackles_lost" integer not null default '0', "interceptions" integer not null default '0', "clearances" integer not null default '0', "blocks" integer not null default '0', "video_reel_link" varchar);
CREATE INDEX "players_team_category_is_active_index" on "players" ("team_category", "is_active");
CREATE INDEX "players_position_team_category_index" on "players" ("position", "team_category");
CREATE UNIQUE INDEX "players_slug_unique" on "players" ("slug");
CREATE TABLE IF NOT EXISTS "matches" ("id" integer primary key autoincrement not null, "home_team" varchar not null default 'AZAM FC', "away_team" varchar not null, "home_team_logo" varchar, "away_team_logo" varchar, "match_date" datetime not null, "venue" varchar not null, "competition" varchar not null, "match_type" varchar not null default 'league', "team_category" varchar not null default 'senior', "home_score" integer not null default '0', "away_score" integer not null default '0', "home_penalties" integer, "away_penalties" integer, "match_summary" text, "goal_scorers" text, "cards" text, "attendance" integer, "referee" varchar, "is_home" tinyint(1) not null default '1', "result" varchar, "created_at" datetime, "updated_at" datetime);
CREATE INDEX "matches_match_date_index" on "matches" ("match_date");
CREATE INDEX "matches_team_category_match_date_index" on "matches" ("team_category", "match_date");
CREATE INDEX "matches_competition_index" on "matches" ("competition");
CREATE TABLE IF NOT EXISTS "categories" ("id" integer primary key autoincrement not null, "name" varchar not null, "slug" varchar not null, "description" text, "color" varchar not null default '#007bff', "is_active" tinyint(1) not null default '1', "sort_order" integer not null default '0', "created_at" datetime, "updated_at" datetime);
CREATE INDEX "categories_is_active_sort_order_index" on "categories" ("is_active", "sort_order");
CREATE UNIQUE INDEX "categories_slug_unique" on "categories" ("slug");
CREATE INDEX "news_category_id_index" on "news" ("category_id");
CREATE TABLE IF NOT EXISTS "tournaments" ("id" integer primary key autoincrement not null, "name" varchar not null, "short_name" varchar, "description" text, "type" varchar not null default 'league', "format" varchar not null default 'round_robin', "start_date" date, "end_date" date, "season" varchar, "is_active" tinyint(1) not null default '1', "logo" varchar, "settings" text, "created_at" datetime, "updated_at" datetime);
CREATE INDEX "tournaments_is_active_type_index" on "tournaments" ("is_active", "type");
CREATE INDEX "tournaments_season_index" on "tournaments" ("season");
CREATE TABLE IF NOT EXISTS "match_events" ("id" integer primary key autoincrement not null, "fixture_id" integer not null, "player_id" integer, "event_type" varchar not null, "minute" integer, "team" varchar not null, "description" text, "metadata" text, "event_time" datetime, "is_live_update" tinyint(1) not null default '0', "sort_order" integer not null default '0', "created_at" datetime, "updated_at" datetime, foreign key("fixture_id") references "fixtures"("id") on delete cascade, foreign key("player_id") references "players"("id") on delete set null);
CREATE INDEX "match_events_fixture_id_minute_index" on "match_events" ("fixture_id", "minute");
CREATE INDEX "match_events_fixture_id_event_type_index" on "match_events" ("fixture_id", "event_type");
CREATE INDEX "match_events_fixture_id_sort_order_index" on "match_events" ("fixture_id", "sort_order");
CREATE TABLE IF NOT EXISTS "teams" ("id" integer primary key autoincrement not null, "name" varchar not null, "short_name" varchar, "logo" varchar, "home_stadium" varchar, "founded_year" integer, "description" text, "website" varchar, "social_media" text, "primary_color" varchar, "secondary_color" varchar, "is_active" tinyint(1) not null default '1', "created_at" datetime, "updated_at" datetime);
CREATE INDEX "teams_name_is_active_index" on "teams" ("name", "is_active");
CREATE TABLE IF NOT EXISTS "regions" ("id" integer primary key autoincrement not null, "name" varchar not null, "created_at" datetime, "updated_at" datetime);
CREATE UNIQUE INDEX "regions_name_unique" on "regions" ("name");
CREATE TABLE IF NOT EXISTS "districts" ("id" integer primary key autoincrement not null, "name" varchar not null, "region_id" integer not null, "created_at" datetime, "updated_at" datetime, foreign key("region_id") references "regions"("id") on delete cascade);
CREATE TABLE IF NOT EXISTS "point_transactions" ("id" integer primary key autoincrement not null, "fan_id" integer not null, "points" integer not null, "type" varchar not null, "description" text, "metadata" text, "created_at" datetime, "updated_at" datetime, foreign key("fan_id") references "fans"("id") on delete cascade);
CREATE INDEX "point_transactions_fan_id_created_at_index" on "point_transactions" ("fan_id", "created_at");
CREATE INDEX "point_transactions_type_index" on "point_transactions" ("type");
CREATE TABLE IF NOT EXISTS "jerseys" ("id" integer primary key autoincrement not null, "name" varchar not null, "type" varchar not null, "season" varchar not null, "template_image" varchar not null, "customization_options" text not null, "price" numeric not null default '0', "is_active" tinyint(1) not null default '1', "description" text, "created_at" datetime, "updated_at" datetime);
CREATE INDEX "jerseys_type_is_active_index" on "jerseys" ("type", "is_active");
CREATE INDEX "jerseys_season_index" on "jerseys" ("season");
CREATE TABLE IF NOT EXISTS "fan_jerseys" ("id" integer primary key autoincrement not null, "fan_id" integer not null, "jersey_id" integer not null, "custom_name" varchar, "custom_number" integer, "size" varchar not null, "customizations" text not null, "status" varchar not null default 'pending', "total_price" numeric not null, "order_reference" varchar not null, "ordered_at" datetime not null, "completed_at" datetime, "created_at" datetime, "updated_at" datetime, foreign key("fan_id") references "fans"("id") on delete cascade, foreign key("jersey_id") references "jerseys"("id") on delete cascade);
CREATE INDEX "fan_jerseys_fan_id_status_index" on "fan_jerseys" ("fan_id", "status");
CREATE INDEX "fan_jerseys_order_reference_index" on "fan_jerseys" ("order_reference");
CREATE UNIQUE INDEX "unique_jersey_number" on "fan_jerseys" ("jersey_id", "custom_number");
CREATE UNIQUE INDEX "fan_jerseys_order_reference_unique" on "fan_jerseys" ("order_reference");
CREATE TABLE IF NOT EXISTS "fan_messages" ("id" integer primary key autoincrement not null, "fan_id" integer not null, "subject" varchar not null, "message" text not null, "category" varchar check ("category" in ('general', 'complaint', 'suggestion', 'technical', 'membership')) not null, "priority" varchar check ("priority" in ('low', 'medium', 'high')) not null default 'medium', "status" varchar check ("status" in ('open', 'in_progress', 'resolved', 'closed')) not null default 'open', "admin_reply" text, "replied_by" integer, "replied_at" datetime, "is_spam" tinyint(1) not null default '0', "ip_address" varchar, "attachments" text, "created_at" datetime, "updated_at" datetime, foreign key("fan_id") references "fans"("id") on delete cascade, foreign key("replied_by") references "users"("id") on delete set null);
CREATE INDEX "fan_messages_fan_id_status_index" on "fan_messages" ("fan_id", "status");
CREATE INDEX "fan_messages_category_status_index" on "fan_messages" ("category", "status");
CREATE INDEX "fan_messages_priority_status_index" on "fan_messages" ("priority", "status");
CREATE INDEX "fan_messages_created_at_index" on "fan_messages" ("created_at");
CREATE TABLE IF NOT EXISTS "admin_notices" ("id" integer primary key autoincrement not null, "title" varchar not null, "content" text not null, "type" varchar check ("type" in ('info', 'success', 'warning', 'danger')) not null default 'info', "priority" varchar check ("priority" in ('low', 'medium', 'high')) not null default 'medium', "is_active" tinyint(1) not null default '1', "is_dismissible" tinyint(1) not null default '1', "show_on_dashboard" tinyint(1) not null default '1', "show_on_login" tinyint(1) not null default '0', "starts_at" datetime, "expires_at" datetime, "created_by" integer not null, "updated_by" integer, "target_audience" text, "view_count" integer not null default '0', "created_at" datetime, "updated_at" datetime, foreign key("created_by") references "users"("id") on delete cascade, foreign key("updated_by") references "users"("id") on delete set null);
CREATE INDEX "admin_notices_is_active_starts_at_expires_at_index" on "admin_notices" ("is_active", "starts_at", "expires_at");
CREATE INDEX "admin_notices_type_priority_index" on "admin_notices" ("type", "priority");
CREATE INDEX "admin_notices_created_at_index" on "admin_notices" ("created_at");
CREATE TABLE IF NOT EXISTS "vendors" ("id" integer primary key autoincrement not null, "name" varchar not null, "phone_number" varchar not null, "region" varchar not null, "district" varchar not null, "ward" varchar, "street" varchar, "is_active" tinyint(1) not null default '1', "created_at" datetime, "updated_at" datetime);
CREATE INDEX "vendors_region_district_index" on "vendors" ("region", "district");
CREATE INDEX "vendors_is_active_index" on "vendors" ("is_active");
CREATE TABLE fans (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, first_name VARCHAR(255) NOT NULL COLLATE "BINARY", last_name VARCHAR(255) NOT NULL COLLATE "BINARY", date_of_birth DATE NOT NULL, phone VARCHAR(255) NOT NULL COLLATE "BINARY", email VARCHAR(255) DEFAULT NULL COLLATE "BINARY", gender VARCHAR(255) NOT NULL COLLATE "BINARY", country VARCHAR(255) DEFAULT 'Tanzania' NOT NULL COLLATE "BINARY", region VARCHAR(255) NOT NULL COLLATE "BINARY", district VARCHAR(255) NOT NULL COLLATE "BINARY", ward VARCHAR(255) DEFAULT NULL COLLATE "BINARY", street VARCHAR(255) DEFAULT NULL COLLATE "BINARY", points INTEGER DEFAULT 0 NOT NULL, favorite_jersey_number VARCHAR(255) DEFAULT NULL COLLATE "BINARY", favorite_jersey_name VARCHAR(255) DEFAULT NULL COLLATE "BINARY", last_login DATETIME DEFAULT NULL, email_verified_at DATETIME DEFAULT NULL, password VARCHAR(255) NOT NULL COLLATE "BINARY", remember_token VARCHAR(255) DEFAULT NULL COLLATE "BINARY", created_at DATETIME DEFAULT NULL, updated_at DATETIME DEFAULT NULL, "profile_image" varchar, "favorite_jersey_type" varchar check ("favorite_jersey_type" in ('home', 'away', 'third')) not null default 'home');
CREATE UNIQUE INDEX fans_phone_unique ON fans (phone);
CREATE TABLE IF NOT EXISTS "settings" ("id" integer primary key autoincrement not null, "key" varchar not null, "value" text, "type" varchar not null default 'string', "created_at" datetime, "updated_at" datetime);
CREATE UNIQUE INDEX "settings_key_unique" on "settings" ("key");
CREATE TABLE IF NOT EXISTS "leagues" ("id" integer primary key autoincrement not null, "name" varchar not null, "season" varchar not null, "team_id" integer not null, "matches_played" integer not null default '0', "wins" integer not null default '0', "draws" integer not null default '0', "losses" integer not null default '0', "goals_for" integer not null default '0', "goals_against" integer not null default '0', "goal_difference" integer not null default '0', "points" integer not null default '0', "position" integer, "form" varchar, "is_active" tinyint(1) not null default '1', "created_at" datetime, "updated_at" datetime, foreign key("team_id") references "teams"("id") on delete cascade);
CREATE UNIQUE INDEX "leagues_team_id_season_name_unique" on "leagues" ("team_id", "season", "name");
CREATE INDEX "leagues_season_name_position_index" on "leagues" ("season", "name", "position");
CREATE TABLE fixtures (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, match_date DATETIME NOT NULL, competition_type VARCHAR(255) NOT NULL COLLATE "BINARY", match_type VARCHAR(255) DEFAULT 'league' NOT NULL COLLATE "BINARY", team_category VARCHAR(255) DEFAULT 'senior' NOT NULL COLLATE "BINARY", match_preview CLOB DEFAULT NULL COLLATE "BINARY", status VARCHAR(255) DEFAULT 'scheduled' NOT NULL COLLATE "BINARY", created_at DATETIME DEFAULT NULL, updated_at DATETIME DEFAULT NULL, tournament_id INTEGER DEFAULT NULL, home_team_id INTEGER DEFAULT NULL, away_team_id INTEGER DEFAULT NULL, stadium VARCHAR(255) DEFAULT NULL COLLATE "BINARY", home_score INTEGER DEFAULT NULL, away_score INTEGER DEFAULT NULL, match_report CLOB DEFAULT NULL COLLATE "BINARY", attendance INTEGER DEFAULT NULL, referee VARCHAR(255) DEFAULT NULL COLLATE "BINARY", team_lineups CLOB DEFAULT NULL COLLATE "BINARY", is_featured BOOLEAN DEFAULT 0 NOT NULL, broadcast_link VARCHAR(255) DEFAULT NULL COLLATE "BINARY");
CREATE INDEX fixtures_is_featured_match_date_index ON fixtures (is_featured, match_date);
CREATE INDEX fixtures_tournament_id_match_date_index ON fixtures (tournament_id, match_date);
CREATE INDEX fixtures_match_date_status_index ON fixtures (match_date, status);
CREATE INDEX fixtures_team_category_status_index ON fixtures (team_category, status);
CREATE TABLE IF NOT EXISTS "exclusive_stories" ("id" integer primary key autoincrement not null, "title" varchar not null, "type" varchar check ("type" in ('photos', 'video')) not null, "description" text, "media_paths" text not null, "thumbnail_path" varchar, "is_active" tinyint(1) not null default '1', "order_position" integer not null default '0', "created_at" datetime, "updated_at" datetime, "is_featured" tinyint(1) not null default '0', "video_link" varchar, "thumbnail" varchar);
INSERT INTO migrations VALUES(1,'2014_10_12_000000_create_users_table',1);
INSERT INTO migrations VALUES(2,'2014_10_12_100000_create_password_reset_tokens_table',1);
INSERT INTO migrations VALUES(3,'2019_08_19_000000_create_failed_jobs_table',1);
INSERT INTO migrations VALUES(4,'2019_12_14_000001_create_personal_access_tokens_table',1);
INSERT INTO migrations VALUES(5,'2025_01_20_120000_remove_venue_from_fixtures_table',1);
INSERT INTO migrations VALUES(6,'2025_08_19_063154_create_news_table',1);
INSERT INTO migrations VALUES(7,'2025_08_19_063159_create_players_table',1);
INSERT INTO migrations VALUES(8,'2025_08_19_063206_create_fixtures_table',1);
INSERT INTO migrations VALUES(9,'2025_08_19_063212_create_matches_table',1);
INSERT INTO migrations VALUES(10,'2025_08_19_063218_add_role_to_users_table',1);
INSERT INTO migrations VALUES(11,'2025_08_19_084406_create_categories_table',1);
INSERT INTO migrations VALUES(12,'2025_08_19_084443_add_category_id_to_news_table',1);
INSERT INTO migrations VALUES(13,'2025_08_19_125512_add_statistics_to_players_table',1);
INSERT INTO migrations VALUES(14,'2025_08_19_131353_add_video_reel_link_to_players_table',1);
INSERT INTO migrations VALUES(15,'2025_08_19_161708_create_tournaments_table',1);
INSERT INTO migrations VALUES(16,'2025_08_19_161739_create_match_events_table',1);
INSERT INTO migrations VALUES(17,'2025_08_19_161826_add_tournament_and_results_to_fixtures_table',1);
INSERT INTO migrations VALUES(18,'2025_08_19_165630_create_teams_table',1);
INSERT INTO migrations VALUES(19,'2025_08_19_165719_modify_fixtures_table_for_teams',1);
INSERT INTO migrations VALUES(20,'2025_08_20_074023_create_fans_table',1);
INSERT INTO migrations VALUES(21,'2025_08_20_074138_create_regions_table',1);
INSERT INTO migrations VALUES(22,'2025_08_20_074151_create_districts_table',1);
INSERT INTO migrations VALUES(23,'2025_08_20_075637_create_point_transactions_table',1);
INSERT INTO migrations VALUES(24,'2025_08_20_080227_create_jerseys_table',1);
INSERT INTO migrations VALUES(25,'2025_08_20_080341_create_fan_jerseys_table',1);
INSERT INTO migrations VALUES(26,'2025_08_20_081410_create_fan_messages_table',1);
INSERT INTO migrations VALUES(27,'2025_08_20_082107_create_admin_notices_table',1);
INSERT INTO migrations VALUES(28,'2025_08_20_121206_create_vendors_table',1);
INSERT INTO migrations VALUES(29,'2025_08_20_131229_add_jersey_image_to_fans_table',1);
INSERT INTO migrations VALUES(30,'2025_08_20_131942_drop_jersey_image_from_fans_table',1);
INSERT INTO migrations VALUES(31,'2025_08_20_132010_create_settings_table',1);
INSERT INTO migrations VALUES(32,'2025_08_20_135241_create_leagues_table',1);
INSERT INTO migrations VALUES(33,'2025_08_20_140247_add_profile_image_to_users_table',1);
INSERT INTO migrations VALUES(34,'2025_08_20_140813_add_profile_image_to_fans_table',1);
INSERT INTO migrations VALUES(35,'2025_08_25_163935_add_jersey_type_to_fans_table',2);
INSERT INTO migrations VALUES(36,'2025_08_26_103827_add_tournament_id_to_fixtures_table',3);
INSERT INTO migrations VALUES(37,'2025_08_26_104629_add_team_ids_to_fixtures_table',3);
INSERT INTO migrations VALUES(38,'2025_08_26_105050_remove_old_team_columns_from_fixtures_table',3);
INSERT INTO migrations VALUES(39,'2025_08_27_084315_create_exclusive_stories_table',4);
INSERT INTO migrations VALUES(40,'2025_08_27_104222_add_is_featured_to_exclusive_stories_table',5);
INSERT INTO migrations VALUES(41,'2025_08_27_113010_add_video_link_to_exclusive_stories_table',6);
INSERT INTO migrations VALUES(42,'2025_08_27_114346_add_thumbnail_to_exclusive_stories_table',7);
